prototype(Carbon.BackendDocument:Editable) < prototype(Neos.Fusion:Component) {
    node = ${node}

    // The name of the property which should be accessed
    property = null

    // Style of input
    // - input = No linebreaks, no tags, but autogrowing
    // - select = Select values, uses `options` and `optionGroups` DataStructure
    // - radio = Radio buttons, uses `options` DataStructure
    // - block = Default editor, block style
    // - inline = Default editor, inline style
    type = 'input'

    // Used for type select and radio 
    options = Neos.Fusion:DataStructure
    // Used for type select
    optionGroups = Neos.Fusion:DataStructure
    /*
    Example for optionGroups
    optionGroups {
        group {
            label = 'The label'
            disabled = false
            options {
                key = 'Value'
            }
        }
    }
    */

    // Prepend a label
    label = null

    // Overwrite the placeholder from the nodetype definition
    placeholder = null

    // Add your own CSS class if you want to override some stylings
    class = null

    // Add your own style
    style = null

    // Inlcude the styling.
    // Be aware! If one elment on a document has set this to true, this get's included for the whole document
    includeCSS = true

    // Internal
    block = ${this.type == 'block'}
    value = ${q(this.node).property(this.property)}
    disabled = ${this.node.context.inBackend && this.node.context.currentRenderingMode.edit ? null : true}
    id = ${this.property + this.node.identifier + Math.randomInt(0, 10000)}
    needLabel = ${this.type != 'block' && this.type != 'inline'}
    inBackend = ${this.node.context.inBackend}

    @if.hasNodeAndPropertyAndType = ${this.node && this.property && Type.isString(this.type)}

    renderer = afx`
        {!props.inBackend && props.value ? props.value : ''}
        <div class={['carbon-backenddocument-editable', props.class]} style={props.style} @if.set={props.inBackend}>
            <link
                @if.set={props.includeCSS}
                rel='stylesheet'
                data-slipstream
                href={StaticResource.uri('Carbon.BackendDocument', 'Public/Editable.css')}
            />
            <script src={StaticResource.uri('Carbon.BackendDocument', 'Public/Editable.js')} data-slipstream defer></script>
            <label
                @if.set={props.label && props.needLabel}
                class='carbon-backenddocument-editable__label'
                for={props.id}
            >
                {props.label}
            </label>
            <div
                @if.set={props.label && !props.needLabel}
                class='carbon-backenddocument-editable__label'
            >
                {props.label}
            </div>
            <div
                @if.set={props.type == 'radio'}
                class='carbon-backenddocument-editable__radio'
            >
                <Neos.Fusion:Loop items={props.options}>
                    <label>
                        <input type='radio' name={props.id} value={itemKey} checked={props.value == itemKey} />
                        <span>{item}</span>
                    </label>
                </Neos.Fusion:Loop>
            </div>
            <select
                @if.set={props.type == 'select'}
                id={props.id}
                class='carbon-backenddocument-editable__select'
                disabled={props.disabled}
            >
                <option
                    @if.set={!props.value}
                    selected
                    class='carbon-backenddocument-editable__selectplaceholder'
                >
                    {props.placeholder}
                </option>
                <Neos.Fusion:Loop items={props.options}>
                    <option value={itemKey} selected={props.value == itemKey}>{item}</option>
                </Neos.Fusion:Loop>
                <Neos.Fusion:Loop items={props.optionGroups}>
                    <optgroup label={item.label} disabled={item.disabled}>
                        <Neos.Fusion:Loop items={item.options}>
                            <option value={itemKey} selected={props.value == itemKey}>{item}</option>
                        </Neos.Fusion:Loop>
                    </optgroup>
                </Neos.Fusion:Loop>
            </select>
            <div @if.set={props.type == 'input'} class='carbon-backenddocument-editable__input'>
                <textarea id={props.id} disabled={props.disabled} rows={1} placeholder={props.placeholder}>
                    {props.value}
                </textarea>
            </div>
            <Neos.Neos:Editable
                node={props.node}
                property={props.property}
                block={props.block}
            />
        </div>
    `
}
